;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/9/2024 4:26:33 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2956      	GOTO       342
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A3      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A4      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;Trafic_Light.c,25 :: 		void interrupt(){
;Trafic_Light.c,26 :: 		if(INTF_BIT==1){     //manual interrrupt
0x000B	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x000C	0x280F      	GOTO       L_interrupt0
;Trafic_Light.c,27 :: 		INTF_BIT=0;
0x000D	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;Trafic_Light.c,28 :: 		click++;
0x000E	0x0AA0      	INCF       _click, 1
;Trafic_Light.c,29 :: 		}
L_interrupt0:
;Trafic_Light.c,30 :: 		}
L_end_interrupt:
L__interrupt47:
0x000F	0x0824      	MOVF       ___savePCLATH, 0
0x0010	0x008A      	MOVWF      PCLATH
0x0011	0x0E23      	SWAPF      ___saveSTATUS, 0
0x0012	0x0083      	MOVWF      STATUS
0x0013	0x0EFF      	SWAPF      R15, 1
0x0014	0x0E7F      	SWAPF      R15, 0
0x0015	0x0009      	RETFIE
; end of _interrupt
_port:
;Trafic_Light.c,102 :: 		void port (int port_num , int i){         //select port
;Trafic_Light.c,103 :: 		switch(port_num){
0x0016	0x2828      	GOTO       L_port26
;Trafic_Light.c,104 :: 		case PORT_A:
L_port28:
;Trafic_Light.c,105 :: 		porta=i;
0x0017	0x1283      	BCF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x082F      	MOVF       FARG_port_i, 0
0x001A	0x0085      	MOVWF      PORTA
;Trafic_Light.c,106 :: 		break;
0x001B	0x2852      	GOTO       L_port27
;Trafic_Light.c,107 :: 		case PORT_B:
L_port29:
;Trafic_Light.c,108 :: 		portb=i;
0x001C	0x082F      	MOVF       FARG_port_i, 0
0x001D	0x0086      	MOVWF      PORTB
;Trafic_Light.c,109 :: 		break;
0x001E	0x2852      	GOTO       L_port27
;Trafic_Light.c,110 :: 		case PORT_C:
L_port30:
;Trafic_Light.c,111 :: 		portc=i;
0x001F	0x082F      	MOVF       FARG_port_i, 0
0x0020	0x0087      	MOVWF      PORTC
;Trafic_Light.c,112 :: 		break;
0x0021	0x2852      	GOTO       L_port27
;Trafic_Light.c,113 :: 		case PORT_D:
L_port31:
;Trafic_Light.c,114 :: 		portd=i;
0x0022	0x082F      	MOVF       FARG_port_i, 0
0x0023	0x0088      	MOVWF      PORTD
;Trafic_Light.c,115 :: 		break;
0x0024	0x2852      	GOTO       L_port27
;Trafic_Light.c,116 :: 		case PORT_E:
L_port32:
;Trafic_Light.c,117 :: 		porte=i;
0x0025	0x082F      	MOVF       FARG_port_i, 0
0x0026	0x0089      	MOVWF      PORTE
;Trafic_Light.c,118 :: 		break;
0x0027	0x2852      	GOTO       L_port27
;Trafic_Light.c,119 :: 		}
L_port26:
0x0028	0x1283      	BCF        STATUS, 5
0x0029	0x1303      	BCF        STATUS, 6
0x002A	0x3000      	MOVLW      0
0x002B	0x062E      	XORWF      FARG_port_port_num+1, 0
0x002C	0x1D03      	BTFSS      STATUS, 2
0x002D	0x2830      	GOTO       L__port55
0x002E	0x3000      	MOVLW      0
0x002F	0x062D      	XORWF      FARG_port_port_num, 0
L__port55:
0x0030	0x1903      	BTFSC      STATUS, 2
0x0031	0x2817      	GOTO       L_port28
0x0032	0x3000      	MOVLW      0
0x0033	0x062E      	XORWF      FARG_port_port_num+1, 0
0x0034	0x1D03      	BTFSS      STATUS, 2
0x0035	0x2838      	GOTO       L__port56
0x0036	0x3001      	MOVLW      1
0x0037	0x062D      	XORWF      FARG_port_port_num, 0
L__port56:
0x0038	0x1903      	BTFSC      STATUS, 2
0x0039	0x281C      	GOTO       L_port29
0x003A	0x3000      	MOVLW      0
0x003B	0x062E      	XORWF      FARG_port_port_num+1, 0
0x003C	0x1D03      	BTFSS      STATUS, 2
0x003D	0x2840      	GOTO       L__port57
0x003E	0x3002      	MOVLW      2
0x003F	0x062D      	XORWF      FARG_port_port_num, 0
L__port57:
0x0040	0x1903      	BTFSC      STATUS, 2
0x0041	0x281F      	GOTO       L_port30
0x0042	0x3000      	MOVLW      0
0x0043	0x062E      	XORWF      FARG_port_port_num+1, 0
0x0044	0x1D03      	BTFSS      STATUS, 2
0x0045	0x2848      	GOTO       L__port58
0x0046	0x3003      	MOVLW      3
0x0047	0x062D      	XORWF      FARG_port_port_num, 0
L__port58:
0x0048	0x1903      	BTFSC      STATUS, 2
0x0049	0x2822      	GOTO       L_port31
0x004A	0x3000      	MOVLW      0
0x004B	0x062E      	XORWF      FARG_port_port_num+1, 0
0x004C	0x1D03      	BTFSS      STATUS, 2
0x004D	0x2850      	GOTO       L__port59
0x004E	0x3004      	MOVLW      4
0x004F	0x062D      	XORWF      FARG_port_port_num, 0
L__port59:
0x0050	0x1903      	BTFSC      STATUS, 2
0x0051	0x2825      	GOTO       L_port32
L_port27:
;Trafic_Light.c,120 :: 		}
L_end_port:
0x0052	0x0008      	RETURN
; end of _port
_Douple_Dabble:
;Trafic_Light.c,83 :: 		void Douple_Dabble(int port1 , int port2,int x ){      //display numbers from 0 to 23 on 2 SevenSegments
;Trafic_Light.c,84 :: 		if(x<=9){
0x0053	0x3080      	MOVLW      128
0x0054	0x1283      	BCF        STATUS, 5
0x0055	0x1303      	BCF        STATUS, 6
0x0056	0x00F0      	MOVWF      R0
0x0057	0x3080      	MOVLW      128
0x0058	0x062C      	XORWF      FARG_Douple_Dabble_x+1, 0
0x0059	0x0270      	SUBWF      R0, 0
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x285E      	GOTO       L__Douple_Dabble50
0x005C	0x082B      	MOVF       FARG_Douple_Dabble_x, 0
0x005D	0x3C09      	SUBLW      9
L__Douple_Dabble50:
0x005E	0x1C03      	BTFSS      STATUS, 0
0x005F	0x2881      	GOTO       L_Douple_Dabble16
;Trafic_Light.c,85 :: 		port (port1, x);
0x0060	0x0827      	MOVF       FARG_Douple_Dabble_port1, 0
0x0061	0x00AD      	MOVWF      FARG_port_port_num
0x0062	0x0828      	MOVF       FARG_Douple_Dabble_port1+1, 0
0x0063	0x00AE      	MOVWF      FARG_port_port_num+1
0x0064	0x082B      	MOVF       FARG_Douple_Dabble_x, 0
0x0065	0x00AF      	MOVWF      FARG_port_i
0x0066	0x082C      	MOVF       FARG_Douple_Dabble_x+1, 0
0x0067	0x00B0      	MOVWF      FARG_port_i+1
0x0068	0x2016      	CALL       _port
;Trafic_Light.c,86 :: 		port (port2, x);
0x0069	0x0829      	MOVF       FARG_Douple_Dabble_port2, 0
0x006A	0x00AD      	MOVWF      FARG_port_port_num
0x006B	0x082A      	MOVF       FARG_Douple_Dabble_port2+1, 0
0x006C	0x00AE      	MOVWF      FARG_port_port_num+1
0x006D	0x082B      	MOVF       FARG_Douple_Dabble_x, 0
0x006E	0x00AF      	MOVWF      FARG_port_i
0x006F	0x082C      	MOVF       FARG_Douple_Dabble_x+1, 0
0x0070	0x00B0      	MOVWF      FARG_port_i+1
0x0071	0x2016      	CALL       _port
;Trafic_Light.c,87 :: 		delay_ms(1000);
0x0072	0x300B      	MOVLW      11
0x0073	0x00FB      	MOVWF      R11
0x0074	0x3026      	MOVLW      38
0x0075	0x00FC      	MOVWF      R12
0x0076	0x305D      	MOVLW      93
0x0077	0x00FD      	MOVWF      R13
L_Douple_Dabble17:
0x0078	0x0BFD      	DECFSZ     R13, 1
0x0079	0x2878      	GOTO       L_Douple_Dabble17
0x007A	0x0BFC      	DECFSZ     R12, 1
0x007B	0x2878      	GOTO       L_Douple_Dabble17
0x007C	0x0BFB      	DECFSZ     R11, 1
0x007D	0x2878      	GOTO       L_Douple_Dabble17
0x007E	0x0000      	NOP
0x007F	0x0000      	NOP
;Trafic_Light.c,88 :: 		}
0x0080	0x28EF      	GOTO       L_Douple_Dabble18
L_Douple_Dabble16:
;Trafic_Light.c,89 :: 		else if(x>=10 && x<=19){
0x0081	0x3080      	MOVLW      128
0x0082	0x062C      	XORWF      FARG_Douple_Dabble_x+1, 0
0x0083	0x00F0      	MOVWF      R0
0x0084	0x3080      	MOVLW      128
0x0085	0x0270      	SUBWF      R0, 0
0x0086	0x1D03      	BTFSS      STATUS, 2
0x0087	0x288A      	GOTO       L__Douple_Dabble51
0x0088	0x300A      	MOVLW      10
0x0089	0x022B      	SUBWF      FARG_Douple_Dabble_x, 0
L__Douple_Dabble51:
0x008A	0x1C03      	BTFSS      STATUS, 0
0x008B	0x28BE      	GOTO       L_Douple_Dabble21
0x008C	0x3080      	MOVLW      128
0x008D	0x00F0      	MOVWF      R0
0x008E	0x3080      	MOVLW      128
0x008F	0x062C      	XORWF      FARG_Douple_Dabble_x+1, 0
0x0090	0x0270      	SUBWF      R0, 0
0x0091	0x1D03      	BTFSS      STATUS, 2
0x0092	0x2895      	GOTO       L__Douple_Dabble52
0x0093	0x082B      	MOVF       FARG_Douple_Dabble_x, 0
0x0094	0x3C13      	SUBLW      19
L__Douple_Dabble52:
0x0095	0x1C03      	BTFSS      STATUS, 0
0x0096	0x28BE      	GOTO       L_Douple_Dabble21
L__Douple_Dabble45:
;Trafic_Light.c,90 :: 		port (port1 , x+6);
0x0097	0x0827      	MOVF       FARG_Douple_Dabble_port1, 0
0x0098	0x00AD      	MOVWF      FARG_port_port_num
0x0099	0x0828      	MOVF       FARG_Douple_Dabble_port1+1, 0
0x009A	0x00AE      	MOVWF      FARG_port_port_num+1
0x009B	0x3006      	MOVLW      6
0x009C	0x072B      	ADDWF      FARG_Douple_Dabble_x, 0
0x009D	0x00AF      	MOVWF      FARG_port_i
0x009E	0x082C      	MOVF       FARG_Douple_Dabble_x+1, 0
0x009F	0x1803      	BTFSC      STATUS, 0
0x00A0	0x3E01      	ADDLW      1
0x00A1	0x00B0      	MOVWF      FARG_port_i+1
0x00A2	0x2016      	CALL       _port
;Trafic_Light.c,91 :: 		port (port2 , x+6);
0x00A3	0x0829      	MOVF       FARG_Douple_Dabble_port2, 0
0x00A4	0x00AD      	MOVWF      FARG_port_port_num
0x00A5	0x082A      	MOVF       FARG_Douple_Dabble_port2+1, 0
0x00A6	0x00AE      	MOVWF      FARG_port_port_num+1
0x00A7	0x3006      	MOVLW      6
0x00A8	0x072B      	ADDWF      FARG_Douple_Dabble_x, 0
0x00A9	0x00AF      	MOVWF      FARG_port_i
0x00AA	0x082C      	MOVF       FARG_Douple_Dabble_x+1, 0
0x00AB	0x1803      	BTFSC      STATUS, 0
0x00AC	0x3E01      	ADDLW      1
0x00AD	0x00B0      	MOVWF      FARG_port_i+1
0x00AE	0x2016      	CALL       _port
;Trafic_Light.c,92 :: 		delay_ms(1000);
0x00AF	0x300B      	MOVLW      11
0x00B0	0x00FB      	MOVWF      R11
0x00B1	0x3026      	MOVLW      38
0x00B2	0x00FC      	MOVWF      R12
0x00B3	0x305D      	MOVLW      93
0x00B4	0x00FD      	MOVWF      R13
L_Douple_Dabble22:
0x00B5	0x0BFD      	DECFSZ     R13, 1
0x00B6	0x28B5      	GOTO       L_Douple_Dabble22
0x00B7	0x0BFC      	DECFSZ     R12, 1
0x00B8	0x28B5      	GOTO       L_Douple_Dabble22
0x00B9	0x0BFB      	DECFSZ     R11, 1
0x00BA	0x28B5      	GOTO       L_Douple_Dabble22
0x00BB	0x0000      	NOP
0x00BC	0x0000      	NOP
;Trafic_Light.c,93 :: 		}
0x00BD	0x28EF      	GOTO       L_Douple_Dabble23
L_Douple_Dabble21:
;Trafic_Light.c,94 :: 		else if(x>=20){
0x00BE	0x3080      	MOVLW      128
0x00BF	0x062C      	XORWF      FARG_Douple_Dabble_x+1, 0
0x00C0	0x00F0      	MOVWF      R0
0x00C1	0x3080      	MOVLW      128
0x00C2	0x0270      	SUBWF      R0, 0
0x00C3	0x1D03      	BTFSS      STATUS, 2
0x00C4	0x28C7      	GOTO       L__Douple_Dabble53
0x00C5	0x3014      	MOVLW      20
0x00C6	0x022B      	SUBWF      FARG_Douple_Dabble_x, 0
L__Douple_Dabble53:
0x00C7	0x1C03      	BTFSS      STATUS, 0
0x00C8	0x28EF      	GOTO       L_Douple_Dabble24
;Trafic_Light.c,95 :: 		port (port1 , x+12);
0x00C9	0x0827      	MOVF       FARG_Douple_Dabble_port1, 0
0x00CA	0x00AD      	MOVWF      FARG_port_port_num
0x00CB	0x0828      	MOVF       FARG_Douple_Dabble_port1+1, 0
0x00CC	0x00AE      	MOVWF      FARG_port_port_num+1
0x00CD	0x300C      	MOVLW      12
0x00CE	0x072B      	ADDWF      FARG_Douple_Dabble_x, 0
0x00CF	0x00AF      	MOVWF      FARG_port_i
0x00D0	0x082C      	MOVF       FARG_Douple_Dabble_x+1, 0
0x00D1	0x1803      	BTFSC      STATUS, 0
0x00D2	0x3E01      	ADDLW      1
0x00D3	0x00B0      	MOVWF      FARG_port_i+1
0x00D4	0x2016      	CALL       _port
;Trafic_Light.c,96 :: 		port (port2 , x+12);
0x00D5	0x0829      	MOVF       FARG_Douple_Dabble_port2, 0
0x00D6	0x00AD      	MOVWF      FARG_port_port_num
0x00D7	0x082A      	MOVF       FARG_Douple_Dabble_port2+1, 0
0x00D8	0x00AE      	MOVWF      FARG_port_port_num+1
0x00D9	0x300C      	MOVLW      12
0x00DA	0x072B      	ADDWF      FARG_Douple_Dabble_x, 0
0x00DB	0x00AF      	MOVWF      FARG_port_i
0x00DC	0x082C      	MOVF       FARG_Douple_Dabble_x+1, 0
0x00DD	0x1803      	BTFSC      STATUS, 0
0x00DE	0x3E01      	ADDLW      1
0x00DF	0x00B0      	MOVWF      FARG_port_i+1
0x00E0	0x2016      	CALL       _port
;Trafic_Light.c,97 :: 		delay_ms(1000);
0x00E1	0x300B      	MOVLW      11
0x00E2	0x00FB      	MOVWF      R11
0x00E3	0x3026      	MOVLW      38
0x00E4	0x00FC      	MOVWF      R12
0x00E5	0x305D      	MOVLW      93
0x00E6	0x00FD      	MOVWF      R13
L_Douple_Dabble25:
0x00E7	0x0BFD      	DECFSZ     R13, 1
0x00E8	0x28E7      	GOTO       L_Douple_Dabble25
0x00E9	0x0BFC      	DECFSZ     R12, 1
0x00EA	0x28E7      	GOTO       L_Douple_Dabble25
0x00EB	0x0BFB      	DECFSZ     R11, 1
0x00EC	0x28E7      	GOTO       L_Douple_Dabble25
0x00ED	0x0000      	NOP
0x00EE	0x0000      	NOP
;Trafic_Light.c,98 :: 		}
L_Douple_Dabble24:
L_Douple_Dabble23:
L_Douple_Dabble18:
;Trafic_Light.c,99 :: 		}
L_end_Douple_Dabble:
0x00EF	0x0008      	RETURN
; end of _Douple_Dabble
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00F0	0x1283      	BCF        STATUS, 5
0x00F1	0x1303      	BCF        STATUS, 6
0x00F2	0x0822      	MOVF       ___DoICPAddr+1, 0
0x00F3	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00F4	0x0821      	MOVF       ___DoICPAddr, 0
0x00F5	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00F6	0x0008      	RETURN
; end of _____DoICP
_Manual:
;Trafic_Light.c,123 :: 		void Manual(){
;Trafic_Light.c,124 :: 		unsigned short int delay=0;
0x00F7	0x1283      	BCF        STATUS, 5
0x00F8	0x1303      	BCF        STATUS, 6
0x00F9	0x01A6      	CLRF       Manual_delay_L0
;Trafic_Light.c,125 :: 		while(Manual_Automatic_switch==0){  //press to switch Manual
L_Manual33:
0x00FA	0x1B86      	BTFSC      PORTB, 7
0x00FB	0x2948      	GOTO       L_Manual34
;Trafic_Light.c,126 :: 		while(click==1){
L_Manual35:
0x00FC	0x0820      	MOVF       _click, 0
0x00FD	0x3A01      	XORLW      1
0x00FE	0x1D03      	BTFSS      STATUS, 2
0x00FF	0x2921      	GOTO       L_Manual36
;Trafic_Light.c,127 :: 		for(delay ;delay<3 ;delay++ ){
L_Manual37:
0x0100	0x3003      	MOVLW      3
0x0101	0x0226      	SUBWF      Manual_delay_L0, 0
0x0102	0x1803      	BTFSC      STATUS, 0
0x0103	0x291B      	GOTO       L_Manual38
;Trafic_Light.c,128 :: 		red1=1;green1=0;yellow1=0;
0x0104	0x1586      	BSF        PORTB, 3
0x0105	0x1086      	BCF        PORTB, 1
0x0106	0x1106      	BCF        PORTB, 2
;Trafic_Light.c,129 :: 		red2=0;green2=0;yellow2=1;      //yellow stays 3 sec to aviod accidents
0x0107	0x1306      	BCF        PORTB, 6
0x0108	0x1206      	BCF        PORTB, 4
0x0109	0x1686      	BSF        PORTB, 5
;Trafic_Light.c,130 :: 		Douple_Dabble(PORT_C,PORT_D,(delay+1));
0x010A	0x3002      	MOVLW      2
0x010B	0x00A7      	MOVWF      FARG_Douple_Dabble_port1
0x010C	0x3000      	MOVLW      0
0x010D	0x00A8      	MOVWF      FARG_Douple_Dabble_port1+1
0x010E	0x3003      	MOVLW      3
0x010F	0x00A9      	MOVWF      FARG_Douple_Dabble_port2
0x0110	0x3000      	MOVLW      0
0x0111	0x00AA      	MOVWF      FARG_Douple_Dabble_port2+1
0x0112	0x0826      	MOVF       Manual_delay_L0, 0
0x0113	0x3E01      	ADDLW      1
0x0114	0x00AB      	MOVWF      FARG_Douple_Dabble_x
0x0115	0x01AC      	CLRF       FARG_Douple_Dabble_x+1
0x0116	0x1803      	BTFSC      STATUS, 0
0x0117	0x0AAC      	INCF       FARG_Douple_Dabble_x+1, 1
0x0118	0x2053      	CALL       _Douple_Dabble
;Trafic_Light.c,127 :: 		for(delay ;delay<3 ;delay++ ){
0x0119	0x0AA6      	INCF       Manual_delay_L0, 1
;Trafic_Light.c,131 :: 		}
0x011A	0x2900      	GOTO       L_Manual37
L_Manual38:
;Trafic_Light.c,132 :: 		delay=3;
0x011B	0x3003      	MOVLW      3
0x011C	0x00A6      	MOVWF      Manual_delay_L0
;Trafic_Light.c,133 :: 		red2=0;green2=1;yellow2=0;  //stop the east street and start the west for the passengers to cross the road
0x011D	0x1306      	BCF        PORTB, 6
0x011E	0x1606      	BSF        PORTB, 4
0x011F	0x1286      	BCF        PORTB, 5
;Trafic_Light.c,134 :: 		}
0x0120	0x28FC      	GOTO       L_Manual35
L_Manual36:
;Trafic_Light.c,135 :: 		delay=0;
0x0121	0x01A6      	CLRF       Manual_delay_L0
;Trafic_Light.c,136 :: 		while(click==2){
L_Manual40:
0x0122	0x0820      	MOVF       _click, 0
0x0123	0x3A02      	XORLW      2
0x0124	0x1D03      	BTFSS      STATUS, 2
0x0125	0x2947      	GOTO       L_Manual41
;Trafic_Light.c,137 :: 		for(delay ;delay<3 ;delay++ ){
L_Manual42:
0x0126	0x3003      	MOVLW      3
0x0127	0x0226      	SUBWF      Manual_delay_L0, 0
0x0128	0x1803      	BTFSC      STATUS, 0
0x0129	0x2941      	GOTO       L_Manual43
;Trafic_Light.c,138 :: 		red1=0;green1=0;yellow1=1;
0x012A	0x1186      	BCF        PORTB, 3
0x012B	0x1086      	BCF        PORTB, 1
0x012C	0x1506      	BSF        PORTB, 2
;Trafic_Light.c,139 :: 		red2=1;green2=0;yellow2=0;    //yellow stays 3 sec to aviod accidents
0x012D	0x1706      	BSF        PORTB, 6
0x012E	0x1206      	BCF        PORTB, 4
0x012F	0x1286      	BCF        PORTB, 5
;Trafic_Light.c,140 :: 		Douple_Dabble(PORT_C,PORT_D,(delay+1));
0x0130	0x3002      	MOVLW      2
0x0131	0x00A7      	MOVWF      FARG_Douple_Dabble_port1
0x0132	0x3000      	MOVLW      0
0x0133	0x00A8      	MOVWF      FARG_Douple_Dabble_port1+1
0x0134	0x3003      	MOVLW      3
0x0135	0x00A9      	MOVWF      FARG_Douple_Dabble_port2
0x0136	0x3000      	MOVLW      0
0x0137	0x00AA      	MOVWF      FARG_Douple_Dabble_port2+1
0x0138	0x0826      	MOVF       Manual_delay_L0, 0
0x0139	0x3E01      	ADDLW      1
0x013A	0x00AB      	MOVWF      FARG_Douple_Dabble_x
0x013B	0x01AC      	CLRF       FARG_Douple_Dabble_x+1
0x013C	0x1803      	BTFSC      STATUS, 0
0x013D	0x0AAC      	INCF       FARG_Douple_Dabble_x+1, 1
0x013E	0x2053      	CALL       _Douple_Dabble
;Trafic_Light.c,137 :: 		for(delay ;delay<3 ;delay++ ){
0x013F	0x0AA6      	INCF       Manual_delay_L0, 1
;Trafic_Light.c,141 :: 		}
0x0140	0x2926      	GOTO       L_Manual42
L_Manual43:
;Trafic_Light.c,142 :: 		delay=3;                  //to stop thr loop
0x0141	0x3003      	MOVLW      3
0x0142	0x00A6      	MOVWF      Manual_delay_L0
;Trafic_Light.c,143 :: 		red1=0;green1=1;yellow1=0;
0x0143	0x1186      	BCF        PORTB, 3
0x0144	0x1486      	BSF        PORTB, 1
0x0145	0x1106      	BCF        PORTB, 2
;Trafic_Light.c,144 :: 		}
0x0146	0x2922      	GOTO       L_Manual40
L_Manual41:
;Trafic_Light.c,145 :: 		}
0x0147	0x28FA      	GOTO       L_Manual33
L_Manual34:
;Trafic_Light.c,146 :: 		click=0;     //to star over with 0 clicks
0x0148	0x01A0      	CLRF       _click
;Trafic_Light.c,147 :: 		}
L_end_Manual:
0x0149	0x0008      	RETURN
; end of _Manual
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x014A	0x20F0      	CALL       _____DoICP
0x014B	0x118A      	BCF        PCLATH, 3
0x014C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x014D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x014E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x014F	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0150	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0151	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0152	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0153	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0154	0x294A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0155	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0156	0x1283      	BCF        STATUS, 5
0x0157	0x1303      	BCF        STATUS, 6
0x0158	0x01A0      	CLRF       _click
;Trafic_Light.c,33 :: 		void main(void) {
;Trafic_Light.c,34 :: 		unsigned short int i=0;
0x0159	0x01A5      	CLRF       main_i_L0
;Trafic_Light.c,35 :: 		adcon1=6;       //to make port a work as output
0x015A	0x3006      	MOVLW      6
0x015B	0x1683      	BSF        STATUS, 5
0x015C	0x009F      	MOVWF      ADCON1
;Trafic_Light.c,36 :: 		trisa=0;
0x015D	0x0185      	CLRF       TRISA
;Trafic_Light.c,37 :: 		trisb=0b10000001;
0x015E	0x3081      	MOVLW      129
0x015F	0x0086      	MOVWF      TRISB
;Trafic_Light.c,38 :: 		trisc=0;
0x0160	0x0187      	CLRF       TRISC
;Trafic_Light.c,39 :: 		trisd=0;
0x0161	0x0188      	CLRF       TRISD
;Trafic_Light.c,40 :: 		porta=255;
0x0162	0x30FF      	MOVLW      255
0x0163	0x1283      	BCF        STATUS, 5
0x0164	0x0085      	MOVWF      PORTA
;Trafic_Light.c,41 :: 		portb=0;
0x0165	0x0186      	CLRF       PORTB
;Trafic_Light.c,42 :: 		portc=0;
0x0166	0x0187      	CLRF       PORTC
;Trafic_Light.c,43 :: 		portd=0;
0x0167	0x0188      	CLRF       PORTD
;Trafic_Light.c,44 :: 		GIE_BIT=1;        //global interrupt enable
0x0168	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;Trafic_Light.c,45 :: 		INTE_BIT=1;      //interrupt enable bit
0x0169	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;Trafic_Light.c,46 :: 		INTEDG_BIT=0;    //faling edge
0x016A	0x1683      	BSF        STATUS, 5
0x016B	0x1301      	BCF        INTEDG_bit, BitPos(INTEDG_bit+0)
;Trafic_Light.c,47 :: 		NOT_RBPU_BIT=0;  // pull up inside the system
0x016C	0x1381      	BCF        NOT_RBPU_bit, BitPos(NOT_RBPU_bit+0)
;Trafic_Light.c,49 :: 		for(;;){
L_main1:
;Trafic_Light.c,50 :: 		Manual();
0x016D	0x20F7      	CALL       _Manual
;Trafic_Light.c,51 :: 		for(i=1 ;i<=12;i++){
0x016E	0x3001      	MOVLW      1
0x016F	0x00A5      	MOVWF      main_i_L0
L_main4:
0x0170	0x0825      	MOVF       main_i_L0, 0
0x0171	0x3C0C      	SUBLW      12
0x0172	0x1C03      	BTFSS      STATUS, 0
0x0173	0x2989      	GOTO       L_main5
;Trafic_Light.c,52 :: 		Manual();                   //check for Manual operation
0x0174	0x20F7      	CALL       _Manual
;Trafic_Light.c,53 :: 		red1=1;green1=0;yellow1=0;  //east
0x0175	0x1586      	BSF        PORTB, 3
0x0176	0x1086      	BCF        PORTB, 1
0x0177	0x1106      	BCF        PORTB, 2
;Trafic_Light.c,54 :: 		red2=0;green2=1;yellow2=0;  // west
0x0178	0x1306      	BCF        PORTB, 6
0x0179	0x1606      	BSF        PORTB, 4
0x017A	0x1286      	BCF        PORTB, 5
;Trafic_Light.c,55 :: 		Douple_Dabble(PORT_C,PORT_D,i);
0x017B	0x3002      	MOVLW      2
0x017C	0x00A7      	MOVWF      FARG_Douple_Dabble_port1
0x017D	0x3000      	MOVLW      0
0x017E	0x00A8      	MOVWF      FARG_Douple_Dabble_port1+1
0x017F	0x3003      	MOVLW      3
0x0180	0x00A9      	MOVWF      FARG_Douple_Dabble_port2
0x0181	0x3000      	MOVLW      0
0x0182	0x00AA      	MOVWF      FARG_Douple_Dabble_port2+1
0x0183	0x0825      	MOVF       main_i_L0, 0
0x0184	0x00AB      	MOVWF      FARG_Douple_Dabble_x
0x0185	0x01AC      	CLRF       FARG_Douple_Dabble_x+1
0x0186	0x2053      	CALL       _Douple_Dabble
;Trafic_Light.c,51 :: 		for(i=1 ;i<=12;i++){
0x0187	0x0AA5      	INCF       main_i_L0, 1
;Trafic_Light.c,56 :: 		}
0x0188	0x2970      	GOTO       L_main4
L_main5:
;Trafic_Light.c,57 :: 		i=1;
0x0189	0x3001      	MOVLW      1
0x018A	0x00A5      	MOVWF      main_i_L0
;Trafic_Light.c,58 :: 		for(i ;i<=3 ;i++){
L_main7:
0x018B	0x0825      	MOVF       main_i_L0, 0
0x018C	0x3C03      	SUBLW      3
0x018D	0x1C03      	BTFSS      STATUS, 0
0x018E	0x29A7      	GOTO       L_main8
;Trafic_Light.c,59 :: 		Manual();
0x018F	0x20F7      	CALL       _Manual
;Trafic_Light.c,60 :: 		red1=1;green1=0;yellow1=0;
0x0190	0x1586      	BSF        PORTB, 3
0x0191	0x1086      	BCF        PORTB, 1
0x0192	0x1106      	BCF        PORTB, 2
;Trafic_Light.c,61 :: 		red2=0;green2=0;yellow2=1;
0x0193	0x1306      	BCF        PORTB, 6
0x0194	0x1206      	BCF        PORTB, 4
0x0195	0x1686      	BSF        PORTB, 5
;Trafic_Light.c,62 :: 		Douple_Dabble(PORT_C,PORT_D,i+12);
0x0196	0x3002      	MOVLW      2
0x0197	0x00A7      	MOVWF      FARG_Douple_Dabble_port1
0x0198	0x3000      	MOVLW      0
0x0199	0x00A8      	MOVWF      FARG_Douple_Dabble_port1+1
0x019A	0x3003      	MOVLW      3
0x019B	0x00A9      	MOVWF      FARG_Douple_Dabble_port2
0x019C	0x3000      	MOVLW      0
0x019D	0x00AA      	MOVWF      FARG_Douple_Dabble_port2+1
0x019E	0x300C      	MOVLW      12
0x019F	0x0725      	ADDWF      main_i_L0, 0
0x01A0	0x00AB      	MOVWF      FARG_Douple_Dabble_x
0x01A1	0x01AC      	CLRF       FARG_Douple_Dabble_x+1
0x01A2	0x1803      	BTFSC      STATUS, 0
0x01A3	0x0AAC      	INCF       FARG_Douple_Dabble_x+1, 1
0x01A4	0x2053      	CALL       _Douple_Dabble
;Trafic_Light.c,58 :: 		for(i ;i<=3 ;i++){
0x01A5	0x0AA5      	INCF       main_i_L0, 1
;Trafic_Light.c,63 :: 		}
0x01A6	0x298B      	GOTO       L_main7
L_main8:
;Trafic_Light.c,64 :: 		i=1;
0x01A7	0x3001      	MOVLW      1
0x01A8	0x00A5      	MOVWF      main_i_L0
;Trafic_Light.c,65 :: 		for(i ;i<=20 ;i++){
L_main10:
0x01A9	0x0825      	MOVF       main_i_L0, 0
0x01AA	0x3C14      	SUBLW      20
0x01AB	0x1C03      	BTFSS      STATUS, 0
0x01AC	0x29C2      	GOTO       L_main11
;Trafic_Light.c,66 :: 		Manual();
0x01AD	0x20F7      	CALL       _Manual
;Trafic_Light.c,67 :: 		red1=0;green1=1;yellow1=0;
0x01AE	0x1186      	BCF        PORTB, 3
0x01AF	0x1486      	BSF        PORTB, 1
0x01B0	0x1106      	BCF        PORTB, 2
;Trafic_Light.c,68 :: 		red2=1;green2=0;yellow2=0;
0x01B1	0x1706      	BSF        PORTB, 6
0x01B2	0x1206      	BCF        PORTB, 4
0x01B3	0x1286      	BCF        PORTB, 5
;Trafic_Light.c,69 :: 		Douple_Dabble(PORT_C,PORT_D,i);
0x01B4	0x3002      	MOVLW      2
0x01B5	0x00A7      	MOVWF      FARG_Douple_Dabble_port1
0x01B6	0x3000      	MOVLW      0
0x01B7	0x00A8      	MOVWF      FARG_Douple_Dabble_port1+1
0x01B8	0x3003      	MOVLW      3
0x01B9	0x00A9      	MOVWF      FARG_Douple_Dabble_port2
0x01BA	0x3000      	MOVLW      0
0x01BB	0x00AA      	MOVWF      FARG_Douple_Dabble_port2+1
0x01BC	0x0825      	MOVF       main_i_L0, 0
0x01BD	0x00AB      	MOVWF      FARG_Douple_Dabble_x
0x01BE	0x01AC      	CLRF       FARG_Douple_Dabble_x+1
0x01BF	0x2053      	CALL       _Douple_Dabble
;Trafic_Light.c,65 :: 		for(i ;i<=20 ;i++){
0x01C0	0x0AA5      	INCF       main_i_L0, 1
;Trafic_Light.c,70 :: 		}
0x01C1	0x29A9      	GOTO       L_main10
L_main11:
;Trafic_Light.c,71 :: 		i=1;
0x01C2	0x3001      	MOVLW      1
0x01C3	0x00A5      	MOVWF      main_i_L0
;Trafic_Light.c,72 :: 		for(i ;i<=3 ;i++){
L_main13:
0x01C4	0x0825      	MOVF       main_i_L0, 0
0x01C5	0x3C03      	SUBLW      3
0x01C6	0x1C03      	BTFSS      STATUS, 0
0x01C7	0x29E0      	GOTO       L_main14
;Trafic_Light.c,73 :: 		Manual();
0x01C8	0x20F7      	CALL       _Manual
;Trafic_Light.c,74 :: 		red1=0;green1=0;yellow1=1;
0x01C9	0x1186      	BCF        PORTB, 3
0x01CA	0x1086      	BCF        PORTB, 1
0x01CB	0x1506      	BSF        PORTB, 2
;Trafic_Light.c,75 :: 		red2=1;green2=0;yellow2=0;
0x01CC	0x1706      	BSF        PORTB, 6
0x01CD	0x1206      	BCF        PORTB, 4
0x01CE	0x1286      	BCF        PORTB, 5
;Trafic_Light.c,76 :: 		Douple_Dabble(PORT_C,PORT_D,i+20);
0x01CF	0x3002      	MOVLW      2
0x01D0	0x00A7      	MOVWF      FARG_Douple_Dabble_port1
0x01D1	0x3000      	MOVLW      0
0x01D2	0x00A8      	MOVWF      FARG_Douple_Dabble_port1+1
0x01D3	0x3003      	MOVLW      3
0x01D4	0x00A9      	MOVWF      FARG_Douple_Dabble_port2
0x01D5	0x3000      	MOVLW      0
0x01D6	0x00AA      	MOVWF      FARG_Douple_Dabble_port2+1
0x01D7	0x3014      	MOVLW      20
0x01D8	0x0725      	ADDWF      main_i_L0, 0
0x01D9	0x00AB      	MOVWF      FARG_Douple_Dabble_x
0x01DA	0x01AC      	CLRF       FARG_Douple_Dabble_x+1
0x01DB	0x1803      	BTFSC      STATUS, 0
0x01DC	0x0AAC      	INCF       FARG_Douple_Dabble_x+1, 1
0x01DD	0x2053      	CALL       _Douple_Dabble
;Trafic_Light.c,72 :: 		for(i ;i<=3 ;i++){
0x01DE	0x0AA5      	INCF       main_i_L0, 1
;Trafic_Light.c,77 :: 		}
0x01DF	0x29C4      	GOTO       L_main13
L_main14:
;Trafic_Light.c,79 :: 		}
0x01E0	0x296D      	GOTO       L_main1
;Trafic_Light.c,80 :: 		}
L_end_main:
0x01E1	0x29E1      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [18]    _interrupt
0x0016      [61]    _port
0x0053     [157]    _Douple_Dabble
0x00F0       [7]    _____DoICP
0x00F7      [83]    _Manual
0x014A      [12]    ___CC2DW
0x0156     [140]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    INTF_bit
0x0020       [1]    _click
0x0021       [2]    ___DoICPAddr
0x0023       [1]    ___saveSTATUS
0x0024       [1]    ___savePCLATH
0x0025       [1]    main_i_L0
0x0026       [1]    Manual_delay_L0
0x0027       [2]    FARG_Douple_Dabble_port1
0x0029       [2]    FARG_Douple_Dabble_port2
0x002B       [2]    FARG_Douple_Dabble_x
0x002D       [2]    FARG_port_port_num
0x002F       [2]    FARG_port_i
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0081       [0]    NOT_RBPU_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_Douple_Dabble16
  L_Douple_Dabble17
  L_Douple_Dabble18
  L_Douple_Dabble19
  L_Douple_Dabble20
  L_Douple_Dabble21
  L_Douple_Dabble22
  L_Douple_Dabble23
  L_Douple_Dabble24
  L_Douple_Dabble25
  L_port26
  L_port27
  L_port28
  L_port29
  L_port30
  L_port31
  L_port32
  L_Manual33
  L_Manual34
  L_Manual35
  L_Manual36
  L_Manual37
  L_Manual38
  L_Manual39
  L_Manual40
  L_Manual41
  L_Manual42
  L_Manual43
  L_Manual44
  L__Douple_Dabble45
  L_end_interrupt
  _interrupt
  L__interrupt47
  L_end_main
  _main
  L_end_Douple_Dabble
  _Douple_Dabble
  L__Douple_Dabble50
  L__Douple_Dabble51
  L__Douple_Dabble52
  L__Douple_Dabble53
  L_end_port
  _port
  L__port55
  L__port56
  L__port57
  L__port58
  L__port59
  L_end_Manual
  _Manual
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_interrupt0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_Douple_Dabble16
  L_Douple_Dabble17
  L_Douple_Dabble18
  L_Douple_Dabble19
  L_Douple_Dabble20
  L_Douple_Dabble21
  L_Douple_Dabble22
  L_Douple_Dabble23
  L_Douple_Dabble24
  L_Douple_Dabble25
  L_port26
  L_port27
  L_port28
  L_port29
  L_port30
  L_port31
  L_port32
  L_Manual33
  L_Manual34
  L_Manual35
  L_Manual36
  L_Manual37
  L_Manual38
  L_Manual39
  L_Manual40
  L_Manual41
  L_Manual42
  L_Manual43
  L_Manual44
  L__Douple_Dabble45
  L_end_interrupt
  _interrupt
  L__interrupt47
  L_end_main
  _main
  L_end_Douple_Dabble
  _Douple_Dabble
  L__Douple_Dabble50
  L__Douple_Dabble51
  L__Douple_Dabble52
  L__Douple_Dabble53
  L_end_port
  _port
  L__port55
  L__port56
  L__port57
  L__port58
  L__port59
  L_end_Manual
  _Manual
